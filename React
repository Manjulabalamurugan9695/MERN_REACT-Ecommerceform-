import { useState } from "react";
import logo from './assets/logo.jpg'; 


const EcommerceForm = () => {
  const [formData, setFormData] = useState({
    name: "",
    email: "",
    address: "",
    paymentMethod: "credit-card",
  });
  
  const [errors, setErrors] = useState({});

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData((prevState) => ({
      ...prevState,
      [name]: value,
    }));
  };

  const validateForm = () => {
    const formErrors = {};

   
    if (!formData.name.trim()) {
      formErrors.name = "Full Name is required.";
    }

    
    if (!formData.email.trim()) {
      formErrors.email = "Email is required.";
    } else if (!/\S+@\S+\.\S+/.test(formData.email)) {
      formErrors.email = "Email format is invalid.";
    }

    
    if (!formData.address.trim()) {
      formErrors.address = "Shipping Address is required.";
    }

    
    if (!formData.paymentMethod) {
      formErrors.paymentMethod = "Payment Method is required.";
    }

    console.log("Validation Errors:", formErrors); 
    return formErrors;
  };

  
  const handleSubmit = (e) => {
    e.preventDefault();

    
    const formErrors = validateForm();

    if (Object.keys(formErrors).length === 0) {
      
      alert("Order Submitted!\n" + JSON.stringify(formData, null, 2));
      setErrors({}); 
    } else {
      
      setErrors(formErrors);
    }
  };
  
  //const handleSubmit = (e) => {
    //e.preventDefault();
    //alert("Order Submitted!\n" + JSON.stringify(formData, null, 2));
  //};

  return (

    <div className="form-container">
<div className="logo-container">
        <img
          src={logo}  
          alt="Ecommerce Logo"
          className="form-logo"
        />
      </div>

      <h2>Checkout Form</h2>

      <form onSubmit={handleSubmit}>
        <div className="form-group">
          <label htmlFor="name">Full Name:</label>
          <input
            type="text"
            id="name"
            name="name"
            value={formData.name}
            onChange={handleChange}
            //required
          />
          {errors.name && <p className="error">{errors.name}</p>}
        </div>

        <div className="form-group">
          <label htmlFor="email">Email Address:</label>
          <input
            type="email"
            id="email"
            name="email"
            value={formData.email}
            onChange={handleChange}
            //required
          />
          {errors.email && <p className="error">{errors.email}</p>}
        </div>

        <div className="form-group">
          <label htmlFor="address">Shipping Address:</label>
          <textarea
            id="address"
            name="address"
            value={formData.address}
            onChange={handleChange}
            //required
          ></textarea>
          {errors.address && <p className="error">{errors.address}</p>}
        </div>

        <div className="form-group">
          <label htmlFor="paymentMethod">Payment Method:</label>
          <select
            id="paymentMethod"
            name="paymentMethod"
            value={formData.paymentMethod}
            onChange={handleChange}
          >
            <option value="credit-card">Credit Card</option>
            <option value="paypal">PayPal</option>
            <option value="bank-transfer">Bank Transfer</option>
          </select>
          {errors.paymentMethod && <p className="error">{errors.paymentMethod}</p>}
        </div>
        <div className="form-actions">
          <button type="submit">Submit Order</button>
        </div>
      </form>
    </div>
  );
};

export default EcommerceForm;
